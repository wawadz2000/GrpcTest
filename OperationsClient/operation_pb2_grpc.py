# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import operation_pb2 as operation__pb2


class OperationsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.add = channel.unary_unary(
                '/ressources.java.dz.example.grpc.Operations/add',
                request_serializer=operation__pb2.Operands.SerializeToString,
                response_deserializer=operation__pb2.Result.FromString,
                )
        self.substract = channel.unary_unary(
                '/ressources.java.dz.example.grpc.Operations/substract',
                request_serializer=operation__pb2.Operands.SerializeToString,
                response_deserializer=operation__pb2.Result.FromString,
                )
        self.multip = channel.unary_unary(
                '/ressources.java.dz.example.grpc.Operations/multip',
                request_serializer=operation__pb2.Operands.SerializeToString,
                response_deserializer=operation__pb2.Result.FromString,
                )
        self.divide = channel.unary_unary(
                '/ressources.java.dz.example.grpc.Operations/divide',
                request_serializer=operation__pb2.Operands.SerializeToString,
                response_deserializer=operation__pb2.Result.FromString,
                )
        self.distace = channel.unary_unary(
                '/ressources.java.dz.example.grpc.Operations/distace',
                request_serializer=operation__pb2.Points.SerializeToString,
                response_deserializer=operation__pb2.Result.FromString,
                )


class OperationsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def substract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def multip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def divide(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def distace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OperationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'add': grpc.unary_unary_rpc_method_handler(
                    servicer.add,
                    request_deserializer=operation__pb2.Operands.FromString,
                    response_serializer=operation__pb2.Result.SerializeToString,
            ),
            'substract': grpc.unary_unary_rpc_method_handler(
                    servicer.substract,
                    request_deserializer=operation__pb2.Operands.FromString,
                    response_serializer=operation__pb2.Result.SerializeToString,
            ),
            'multip': grpc.unary_unary_rpc_method_handler(
                    servicer.multip,
                    request_deserializer=operation__pb2.Operands.FromString,
                    response_serializer=operation__pb2.Result.SerializeToString,
            ),
            'divide': grpc.unary_unary_rpc_method_handler(
                    servicer.divide,
                    request_deserializer=operation__pb2.Operands.FromString,
                    response_serializer=operation__pb2.Result.SerializeToString,
            ),
            'distace': grpc.unary_unary_rpc_method_handler(
                    servicer.distace,
                    request_deserializer=operation__pb2.Points.FromString,
                    response_serializer=operation__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ressources.java.dz.example.grpc.Operations', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Operations(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ressources.java.dz.example.grpc.Operations/add',
            operation__pb2.Operands.SerializeToString,
            operation__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def substract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ressources.java.dz.example.grpc.Operations/substract',
            operation__pb2.Operands.SerializeToString,
            operation__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def multip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ressources.java.dz.example.grpc.Operations/multip',
            operation__pb2.Operands.SerializeToString,
            operation__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def divide(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ressources.java.dz.example.grpc.Operations/divide',
            operation__pb2.Operands.SerializeToString,
            operation__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def distace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ressources.java.dz.example.grpc.Operations/distace',
            operation__pb2.Points.SerializeToString,
            operation__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
